======================================================================
Here i will be testing my 2-matrix_divide code with different instance
======================================================================

firstly let's import the module
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

CASE ONE:
when the 'matrix' has the same number of row and 'div' is a integer
::
	>>> matrix = [
	...	[2, 3, 4], 
	...	[6, 6, 6], 
	...	[9, 9, 9]
	... ]
	>>> print(matrix_divided(matrix, 3))
	[[0.67, 1, 1.33], [2 ,2 ,2], [3, 3, 3]]

CASE TWO:
when the not all 'matrix' element are either float or integer and 'div' is an
integer
::
	>>> matrix = [
	...	['a', 1, 3], 
	...	[3, 3, 3], 
	... 	[6, 6, 6]
	... ]
	>>> matrix_divided(matrix,3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix(list of lists) of integers/floats

CASE THREE:
when the row of the 'matrix' is not equal and 'div' is an integer
::
	>>> matrix = [
	... 	[3, 4, 5,], 
	... 	[2, 6, 8, 9]
	... ]
	>>> matrix_divided(matrix, 2)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

CASE FOUR:
when the 'matrix' is having the same number of row and has integer's element
but the 'div' is neither integer nor float
::
	>>> matrix =[
	...	[1, 1, 1], 
	...	[4, 4, 4], 
	... 	[6, 6, 6]
	... ]
	>>> matrix_divided(matrix, 'b')
	Traceback (most recent call last):
	TypeError: div must be a number

CASE FIVE:
when the 'matrix' is having a perfect input but the 'div' is 0
::
	>>> matrix [
	...	[1, 1, 1], 
	...	[3, 3, 3]
	... ]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
